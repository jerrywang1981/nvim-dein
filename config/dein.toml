[[plugins]]
repo = 'mhinz/vim-startify'
hook_add = '''
  let g:startify_change_to_vcs_root = 1
  let g:startify_change_to_dir = 0
  let g:startify_custom_header = ['']
  let g:startify_enable_special = 0
'''


# [[plugins]]
# repo = 'honza/vim-snippets'

# noremap <c-m> :<C-U><C-R>=printf("Leaderf mru %s", "")<CR><CR>


[[plugins]]
repo = 'Yggdroot/LeaderF'
build = './install.sh'
hook_add = '''

  let g:Lf_HideHelp = 1
  let g:Lf_UseCache = 0
  let g:Lf_UseVersionControlTool = 0
  let g:Lf_IgnoreCurrentBufferName = 1
  let g:Lf_ShowDevIcons=0

  let g:Lf_StlSeparator = { 'left': "\ue0b0", 'right': "\ue0b2", 'font': "DejaVu Sans Mono for Powerline" }
  let g:Lf_PreviewResult = {'Function': 0, 'BufTag': 0 }

  let g:Lf_ShortcutF = "<c-p>"
  let g:Lf_ShortcutB = "<leader>fb"
  noremap <c-m> :<C-U><C-R>=printf("Leaderf mru %s", "")<CR><CR>
  noremap <leader>fl :<C-U><C-R>=printf("Leaderf line %s", "")<CR><CR>
  noremap <leader>fs :<C-U><C-R>=printf("Leaderf rg --stayOpen %s", "")<CR><CR>
  xnoremap <leader>fs :<C-U><C-R>=printf("Leaderf! rg --stayOpen -F -e %s ", leaderf#Rg#visual())<CR>
  noremap <leader>fS :<C-U>Leaderf! rg --recall<CR>

  let g:Lf_CommandMap = {'<Tab>': ['<ESC>']}
  let g:Lf_DefaultMode = 'NameOnly'
  let g:Lf_PythonVersion=3
  let g:Lf_WindowHeight = 0.3
  let g:Lf_WorkingDirectoryMode = 'Ac'
  let g:Lf_GtagsAutoGenerate = 0
  let g:Lf_Gtagslabel = 'native-pygments'

  let g:Lf_WildIgnore = {
    \ 'dir': ['.svn','.git','.hg', 'node_modules', 'dist', 'venv'],
    \ 'file': ['*.sw?','~$*','*.bak','*.exe','*.o','*.so','*.py[co]']
    \}
  let g:Lf_MruWildIgnore = {
    \ 'dir': ['.svn','.git','.hg', 'node_modules', 'dist', 'venv'],
    \ 'file': ['*.sw?','~$*','*.bak','*.exe','*.o','*.so','*.py[co]']
    \}
  let g:Lf_RgConfig = [
    \ "--max-columns=300",
    \ "--glob=!node_modules/*",
    \ "--glob=!venv/*",
    \ "--glob=!dist/*",
    \ ]

'''


# [[plugins]]
# repo = 'tpope/vim-fugitive'
# hook_source = '''
  # autocmd BufReadPost fugitive://* set bufhidden=delete
# '''

[[plugins]]
repo = 'kassio/neoterm'
hook_add = 'source ~/.config/nvim/config/terminal.vim'


[[plugins]]
repo = 'editorconfig/editorconfig-vim'
hook_add = '''
  let g:EditorConfig_exclude_patterns = ['fugitive://.*', 'scp://.*']
'''

[[plugins]]
repo = 'scrooloose/nerdcommenter'
hook_add = 'source ~/.config/nvim/config/nerdcommenter.vim'




# [[plugins]]
# repo = 'MarcWeber/vim-addon-mw-utils'


[[plugins]]
repo = 'Valloric/ListToggle'

[[plugins]]
repo = 'jiangmiao/auto-pairs'
hook_add = '''
  let g:AutoPairsMapCh = 0
'''


# [[plugins]]
# repo = 'Konfekt/FastFold'
# hook_add = '''
  # nmap zuz <Plug>(FastFoldUpdate)
  # let g:fastfold_savehook = 1
  # let g:fastfold_fold_command_suffixes =  ['x','X','a','A','o','O','c','C']
  # let g:fastfold_fold_movement_commands = [']z', '[z', 'zj', 'zk']
  # let g:markdown_folding = 1
  # let g:tex_fold_enabled = 1
  # let g:vimsyn_folding = 'af'
  # let g:xml_syntax_folding = 1
  # let g:javaScript_fold = 1
  # let g:sh_fold_enabled= 7
  # let g:ruby_fold = 1
  # let g:perl_fold = 1
  # let g:perl_fold_blocks = 1
  # let g:r_syntax_folding = 1
  # let g:rust_fold = 1
  # let g:php_folding = 1
# '''
